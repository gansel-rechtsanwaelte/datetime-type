on:
    push:
        branches:
            - 'master'
    pull_request: ~

name: "CI"

env:
    REQUIRED_PHP_EXTENSIONS: "ctype, filter, hash, iconv"

jobs:
    composer-validate:
        name: "Composer validate (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.2'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v4"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@2.32.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                    tools: composer:v2

            -
                name: "Validate composer.json"
                run: "composer validate --strict --no-check-lock"

    php-cs-fixer:
        name: PHP-CS-Fixer

        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version:
                    - 7.2

                dependencies:
                    - highest

        steps:
            -
                name: Checkout code
                uses: actions/checkout@v4

            -
                name: Install PHP with extensions
                uses: shivammathur/setup-php@2.32.0
                with:
                    coverage: none
                    php-version: ${{ matrix.php-version }}

            -
                name: "Install dependencies with composer"
                uses: "ramsey/composer-install@3.1.0"
                with:
                    composer-options: "--no-scripts --working-dir=tools"

            -
                name: "Run friendsofphp/php-cs-fixer"
                run: "tools/vendor/bin/php-cs-fixer fix --diff --diff-format=udiff --verbose"

    composer-normalize:
        name: composer-normalize

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v4

            - name: composer-normalize
              uses: docker://ergebnis/composer-normalize-action

    phpstan:
        needs:
            - "composer-validate"

        name: "PHPStan (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.2'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v4"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@2.32.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                    tools: composer:v2

            -
                name: "Composer install"
                uses: "ramsey/composer-install@3.1.0"

            -
                name: "Run phpstan/phpstan"
                run: "vendor/bin/phpstan analyse -c phpstan.neon.dist"

    test:
        name: "PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }}"

        runs-on: ubuntu-latest

        continue-on-error: ${{ matrix.allowed-to-fail }}

        strategy:
            matrix:
                php-version:
                    - '7.2'
                    - '7.3'
                    - '7.4'
                dependencies:
                    - 'lowest'
                    - 'highest'
                allowed-to-fail: [false]
                include:
                    - php-version: '8.0'
                      dependencies: 'lowest'
                      allowed-to-fail: true
                    - php-version: '8.0'
                      dependencies: 'highest'
                      allowed-to-fail: true

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v4

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@2.32.0
              with:
                  coverage: "none"
                  php-version: "${{ matrix.php-version }}"
                  extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                  tools: "composer:v2"

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Composer install"
              uses: "ramsey/composer-install@3.1.0"
              with:
                  dependency-versions: "${{ matrix.dependencies }}"
                  composer-options: "--prefer-dist"

            - name: Run tests
              run: vendor/bin/phpunit -v
